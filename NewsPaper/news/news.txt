>>> from news.models import *
>>> user_1 = User.objects.create_user('user_111')
>>> user_2 = User.objects.create_user('user_222')
>>> author_1 = Author(user = user_1)
>>> author_1.save()
>>> author_2 = Author(user = user_2)
>>> author_2.save()
>>> cate_1 = Category(category = "Спорт")
>>> cate_1.save()
>>> cate_2 = Category(category = "Искуство")
>>> cate_2.save()
>>> cate_3 = Category(category = "Политика")
>>> cate_3.save()
>>> cate_4 = Category(category = "Экономика")
>>> cate_4.save()
>>> article_1 = Post.objects.create(author = author_1, heading = "Заголовок статьи 1", text = "Текст статьи 1")
>>> article_2 = Post.objects.create(author = author_2, heading = "Заголовок статьи 2", text = "Текст статьи 2")
>>> news_1 = Post.objects.create(author = author_1, article_or_news = 1,  heading = "Заголовок новости 1", text = "Текст новости 1")
>>> c_a_1 = PostCategory.objects.create(post = article_1, category = cate_2)
>>> c_a_2 = PostCategory.objects.create(post = article_2, category = cate_1)
>>> c_a_2_2 = PostCategory.objects.create(post = article_2, category = cate_4)
>>> n_a_2 = PostCategory.objects.create(post = news_1, category = cate_3)
>>> com_1 = Comment.objects.create(post = article_1, user = user_1, text = "Текст коментария 1")
>>> com_2 = Comment.objects.create(post = article_2, user = user_2, text = "Текст коментария 2")
>>> com_3 = Comment.objects.create(post = news_1, user = user_1, text = "Текст коментария 3")
>>> com_4 = Comment.objects.create(post = news_1, user = user_2, text = "Текст коментария 4")
>>> article_1.like()
>>> article_2.dislike()
>>> news_1.dislike()
>>> news_1.dislike()
>>> com_1.like()
>>> com_2.like()
>>> com_1.like()
>>> com_3.dislike()
>>> com_4.dislike()
>>> author_1.update_rating()
>>> author_2.update_rating()
>>> a_ob = Author.objects.order_by("-rating")
>>> a_ob[0].rating
>>> a_ob[0].user.username
>>> p_ob = Post.objects.filter(article_or_news = 0).order_by("-rating")
>>> a_p = p_ob[0].author
>>> a_u = a_p.user
>>> a_u.username
>>> p_ob[0].date_time
>>> p_ob[0].rating
>>> p_ob[0].heading
>>> pr = p_ob[0].preview()
>>> pr
>>> Comment.objects.filter(post = p_ob[0]).values("date_time", "user", "rating", "text")